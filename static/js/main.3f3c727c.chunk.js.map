{"version":3,"sources":["components/add.js","components/controls.js","components/item.js","components/listitems.js","App.js","reportWebVitals.js","index.js"],"names":["Additems","onCloseForm","props","show","onsubmit","event","preventDefault","onClear","onchanges","taget","target","name","value","setState","luulai","Push","state","status","id","this","update","nextProps","className","onSubmit","type","onChange","onClick","Component","Controls","hienthi","onsearch","keyword","sorby","sortvalue","onsort","hideorshow","onset","bind","func","placeholder","Item","changes","VaLue","changeStatus","onUpdate","ondelete","Listitems","onchange","onfillter","fillterName","fillterStatus","tasks","data","element","map","item","index","App","setshow","isconplateshow","taskupdate","getId","push","resul","forEach","localStorage","setItem","JSON","stringify","splice","hidendForm","filltername","fillterstatus","parseInt","fillter","toLowerCase","key","sortby","taoitems","getItem","taa","parse","Math","random","setid","filter","task","indexOf","sort","a","b","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f3c727c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Additems extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      id:'',\r\n      name: '',\r\n      status: false\r\n    };\r\n  }\r\n  // hiển thị state khi click vào update\r\n  componentWillMount(){\r\n    if(this.props.update){\r\n      this.setState({\r\n        id: this.props.update.id,\r\n        name: this.props.update.name,\r\n        status: this.props.update.status,\r\n  \r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps && nextProps.update){\r\n      this.setState({\r\n        id: nextProps.update.id,\r\n        name: nextProps.update.name,\r\n        status: nextProps.update.status,\r\n  \r\n      });\r\n    }else if(!nextProps.update){\r\n      this.setState({\r\n        id:'',\r\n        name: '',\r\n        status: false\r\n  \r\n      });\r\n    }\r\n  }\r\n\r\n  // đóng form\r\n  onCloseForm=()=>{\r\n    this.props.show();\r\n  }\r\n  onsubmit=(event)=>{\r\n    event.preventDefault();\r\n    this.onClear();\r\n    this.onCloseForm();\r\n  }\r\n\r\n  onchanges=(event)=>{\r\n    var taget = event.target;\r\n    var name = taget.name;\r\n    var value = taget.value;\r\n    if(name === 'status'){\r\n      var value = taget.value === 'true' ? true : false;\r\n    }\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  luulai=()=>{\r\n    this.props.Push(this.state);\r\n  }\r\n\r\n  onClear=()=>{\r\n    this.setState({\r\n      name: '',\r\n      status: false\r\n    })\r\n  }\r\n  render(){\r\n    var { id } = this.state;\r\n    return (\r\n          <div className=\"additem pd boder\">\r\n            <div className=\"header\">\r\n                <p>{id == '' ? 'thêm công việc' : 'cập nhật công việc'}</p>\r\n            </div>\r\n\r\n            <div className=\"conten\">\r\n\r\n            <form onSubmit={this.onsubmit}>\r\n                <label>\r\n                  <b>Ten:</b>\r\n                </label>\r\n                <input \r\n                  className=\"inputwidth\" \r\n                  type='text'\r\n                  name=\"name\"\r\n                  value={this.state.name}\r\n                  onChange={this.onchanges}\r\n                  ></input>\r\n\r\n                <label>\r\n                    <b>Trang thai:</b>\r\n                </label>\r\n                <select \r\n                  className=\"inputwidth\"\r\n                  name=\"status\"\r\n                  value={this.state.status}\r\n                  onChange={this.onchanges}\r\n                  >\r\n                    <option value={true}>kich hoat</option>\r\n                    <option value={false}>an</option>\r\n                </select>\r\n                <div className=\"mg\">\r\n                    <button \r\n                      className=\"bnt-orange\"\r\n                      onClick={this.luulai}\r\n                      >Luu Lai</button>\r\n                    <button className=\"bnt-tomato\">Huy Bo</button>\r\n                </div>\r\n            </form>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Additems;","import React, { Component } from 'react';\r\n\r\n\r\nclass Controls extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      hideorshow: false,\r\n      keyword: ''\r\n    };\r\n    this.onset= this.onset.bind(this);\r\n  }\r\n  onset(){\r\n    this.setState({\r\n      hideorshow: !this.state.hideorshow\r\n    });\r\n  }\r\n  hienthi= ()=>{\r\n    this.props.show();\r\n  }\r\n\r\n  onchanges=(event)=>{\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  onsearch=()=>{\r\n    this.props.onsearch(this.state.keyword);\r\n  }\r\n  // sắp xếp\r\n\r\n  onClick=(sorby, sortvalue)=>{\r\n     \r\n      this.props.onsort(sorby, sortvalue);\r\n  }\r\n  render(){\r\n    return (\r\n        <div>\r\n                <div className=\"inputwidth\">\r\n                    <button className=\"bnt-blue\" onClick={this.hienthi}>Them Cong Viec</button>\r\n                    <button onClick={this.props.func}>Hien Thị Danh Sách</button>\r\n                </div>\r\n\r\n                <div className=\"dieukhien inputwidth\">\r\n                    <input \r\n                          type=\"text\"\r\n                          name='keyword'\r\n                          value={this.setState.keyword}\r\n                          placeholder=\"Nhap vao tu khoa\"\r\n                          onChange={this.onchanges}\r\n                    >\r\n                    </input>\r\n                    <button \r\n                            className=\"bnt-blue\"\r\n                            onClick={this.onsearch}\r\n                            >\r\n                              Tim kiem\r\n                    </button>\r\n                    <button className=\"bnt-blue\" onClick={this.onset}>Sap Xep</button>\r\n                    {\r\n                       this.state.hideorshow && \r\n                          <div className=\"dropdow\">\r\n                            <ul className=\"inputwidth\">\r\n                                <li\r\n                                  onClick={ ()=>this.onClick('name', 1)}\r\n                                >\r\n                                  <a>a-z</a>\r\n                                </li>\r\n\r\n                                <li\r\n                                  onClick={ ()=>this.onClick('name', -1)}\r\n                                  >\r\n                                  <a>z-a</a>\r\n                                </li>\r\n                            </ul>\r\n                          </div>\r\n                     }\r\n                    \r\n                </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Controls;","import React, { Component } from 'react';\r\n\r\nclass Item extends Component{\r\n\r\n    changes=()=>{\r\n        var id = this.props.VaLue.id;\r\n        this.props.changeStatus(id);\r\n    }\r\n\r\n    //udate items\r\n\r\n    onUpdate=()=>{\r\n        var id = this.props.VaLue.id;\r\n        this.props.onUpdate(id);\r\n    }\r\n\r\n    // delete items trong list\r\n\r\n    ondelete=()=>{\r\n        this.props.ondelete(this.props.VaLue.id)\r\n    }\r\n    render(){\r\n        return(\r\n                <tr>\r\n                    <td>{this.props.id}</td>\r\n                    <td>{this.props.VaLue.name}</td>\r\n                    <td><span \r\n                            className={this.props.VaLue.status === true ? \"bnt-tomato\" : \"bg-green\"}\r\n                            onClick={this.changes}\r\n                            >\r\n                            {this.props.VaLue.status === true ? \"Active\" : \"Ẩn\"}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <button \r\n                            className=\"bnt-orange\"\r\n                            onClick={this.onUpdate}\r\n                            >Sua</button>\r\n                        <button \r\n                            className=\"bnt-tomato\"\r\n                            onClick={this.ondelete}\r\n                            >Xoa</button>\r\n                    </td>\r\n                </tr>\r\n        )\r\n    }\r\n}\r\nexport default Item;","import React, { Component } from 'react';\r\nimport Item from './item';\r\n\r\n\r\nclass Listitems extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      fillterName: '',\r\n      fillterStatus: -1 \r\n    }\r\n\r\n  }\r\n  onchange=(event)=>{\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    this.props.onfillter(name === 'fillterName' ? value : this.state.fillterName, name === 'fillterStatus' ? value : this.state.fillterStatus);\r\n\r\n    this.setState({\r\n      [name]:value\r\n    });\r\n  }\r\n  render(){\r\n\r\n    var tasks = this.props.data;\r\n    var {fillterName, fillterStatus} = this.state;\r\n    var element = tasks.map((item, index)=>\r\n      {\r\n       return <Item \r\n                key={index} \r\n                id={index} \r\n                VaLue={item}\r\n                changeStatus={this.props.changeStatus}\r\n                onUpdate={this.props.onUpdate}\r\n                ondelete={this.props.ondelete}\r\n                />\r\n      }\r\n    )\r\n    return (\r\n             <div className=\"list-items\">\r\n                <table>\r\n                <thead>\r\n                    <tr>\r\n                    <th>STT</th>\r\n                    <th>Ten</th>\r\n                    <th>Trang Thai</th>\r\n                    <th>Hanh Dong</th>\r\n                    </tr>\r\n                    <tr>\r\n                    <td></td>\r\n                    <td><input \r\n                              type=\"text\" \r\n                              className=\"inputwidth\"\r\n                              name=\"fillterName\"\r\n                              value={fillterName}\r\n                              onChange={this.onchange}\r\n                              >\r\n\r\n                        </input>\r\n                    </td>\r\n                    <td>\r\n                        <select \r\n                          className=\"inputwidth\"\r\n                          name=\"fillterStatus\"\r\n                          value={fillterStatus}\r\n                          onChange={this.onchange}\r\n                        >\r\n                          <option value={-1}>Tat Ca</option>\r\n                          <option value={0}>An</option>\r\n                          <option value={1}>Hien Thi</option>\r\n                        </select>\r\n                    </td>\r\n                    <td></td>\r\n                    </tr>\r\n                    {element}\r\n                </thead>\r\n                </table>\r\n          </div>\r\n    )\r\n  }\r\n}\r\nexport default Listitems;","import React, { Component } from 'react';\nimport './App.css';\nimport Additems from './components/add';\nimport Controls from './components/controls';\nimport Listitems from './components/listitems';\n\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state={\n      tasks: [],\n      isconplateshow: false,\n      taskupdate: '',\n      fillter: {\n        name: '',\n        status: -1\n      },\n      keyword: '',\n      sortby: '',\n      sortvalue: -1\n    }\n    this.taoitems= this.taoitems.bind(this);\n  }\n// reset lại thì công việc sẽ lưu vào localStorage và không bị mất đi\n  componentWillMount(){\n    if(localStorage && localStorage.getItem('task')){\n      var taa = JSON.parse(localStorage.getItem('task'));\n\n      this.setState({\n        tasks: taa\n      })\n    }\n  }\n// button tạo các công việc cho list items\n  taoitems(){\n    var tasks =[\n      {\n        id: this.getId(),\n        name: \"Học Reactjs\",\n        status: true\n      },\n      {\n        id: this.getId(),\n        name: \"Học java\",\n        status: true\n      },\n      {\n        id: this.getId(),\n        name: \"Học php\",\n        status: false\n      }\n    ];\n    this.setState({\n      tasks: tasks\n    })\n    localStorage.setItem('task', JSON.stringify(tasks));\n  }\n  // hàm tạo ngẫu nhiên cho hàm tạo id \n  setid(){\n    return Math.random()\n  }\n// tạo id cho công việc\n  getId(){\n    return this.setid() + this.setid() + '-' + this.setid() + '-' + this.setid() + '-' + this.setid() + '-' + this.setid() + '-' + this.setid() + '-' + this.setid();\n  }\n// hiển thị hoặc ẩn form add item\n  setshow = ()=>{\n    if(this.state.isconplateshow === true && this.state.taskupdate != ''){\n      this.setState({\n        isconplateshow: true,\n        taskupdate: ''\n      });\n    }else{\n      this.setState({\n        isconplateshow: !this.state.isconplateshow,\n        taskupdate: ''\n      });\n    }\n   \n  }\n// thêm công việc vào list danh sách \n  Push=(data)=>{\n    var { tasks } = this.state;\n    if(data.id === ''){\n      data.id = this.getId();\n      tasks.push(data);\n    }\n    else{\n      var resul ='';\n      tasks.forEach((item, index)=>{\n        if(item.id === data.id){\n          resul = index;\n        }\n        return resul;\n    });\n    tasks[resul]= data;\n    }\n    this.setState({\n      tasks: tasks,\n      taskupdate: ''\n    });\n    localStorage.setItem('task', JSON.stringify(tasks));\n  }\n\n\n  // xóa công việc khỏi list items\n\n  ondelete=(id)=>{\n    var { tasks } = this.state;\n    var resul = \"\";\n    tasks.forEach((item, index)=>{\n        if(item.id === id){\n          resul = index;\n        }\n        return resul;\n    });\n    tasks.splice(resul, 1);\n\n    this.setState({\n      tasks : tasks\n    });  }\n  // thay đổi lại trạng thái của item\n  changeStatus=(id)=>{\n    var { tasks } = this.state;\n    var resul = \"\";\n    tasks.forEach((item, index)=>{\n        if(item.id === id){\n          resul = index;\n        }\n        return resul;\n    });\n    tasks[resul].status = !tasks[resul].status;\n\n    this.setState({\n      tasks : tasks\n    });\n  }\n// đóng form\n\nhidendForm=()=>{\n  this.setState({\n    isconplateshow: true\n  })\n}\n  // update item\n\n  onUpdate=(id)=>{\n    var { tasks } = this.state;\n    var resul = \"\";\n    tasks.forEach((item, index)=>{\n        if(item.id === id){\n          resul = index;\n        }\n        return resul;\n    });\n    var update = tasks[resul];\n    this.setState({\n      taskupdate: update\n    })\n    this.hidendForm();\n  }\n\n\n  // fillter\n  onfillter= (filltername, fillterstatus)=>{\n    fillterstatus = parseInt(fillterstatus);\n    this.setState({\n      fillter :{\n        name: filltername.toLowerCase(),\n        status: fillterstatus\n      }\n    });\n    \n  }\n\n  // tìm kiếm \n  onsearch=(key)=>{\n    this.setState({\n      keyword: key.toLowerCase()\n    });\n  }\n  //sắp xếp theo yêu cầu\n\n  onsort=(sortby, sortvalue)=>{\n    this.setState({\n      sortby: sortby,\n      sortvalue: sortvalue\n    });\n  }\n  render(){\n\n    var {tasks, taskupdate, fillter, keyword, sortby, sortvalue} = this.state;\n    if(fillter){\n      if(fillter.name){\n        tasks = tasks.filter((task)=>{\n          return task.name.toLowerCase().indexOf(fillter.name) !== -1;\n        });\n      }\n      tasks = tasks.filter((task)=>{\n        if(fillter.status === -1){\n          return task ;\n        }else{\n          return task.status === (fillter.status === 1 ? true : false);\n        }\n      });\n    }\n    if(keyword\n      ){\n      tasks = tasks.filter((task)=>{\n        return task.name.toLowerCase().indexOf(keyword) !== -1;\n      });\n    }\n   if(sortby === 'name'){\n    tasks.sort((a, b)=>{\n      if(a.name > b.name){\n        return sortvalue;\n      }else if(a.name < b.name){\n        return -sortvalue;\n      }\n      else return 0;\n    })\n   }\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h2>\n          quản lý công việc\n        </h2>\n      </div>\n\n      {/* noi dung */}\n      <div className=\"container\">\n         \n      {\n        this.state.isconplateshow === true && <Additems Push={this.Push} \n                                                        show={this.setshow}\n                                                        update={taskupdate}\n                                                        />\n      }\n\n        <div className={this.state.isconplateshow === true ? 'control-item pd boder' : 'control-all pd boder'}>\n          <Controls \n                    func={this.taoitems}\n                    show={this.setshow}\n                    onsearch={this.onsearch}\n                    onsort={this.onsort}\n                    />\n          <Listitems \n            data={tasks} \n            changeStatus={this.changeStatus}\n            onUpdate={this.onUpdate}\n            ondelete={this.ondelete}\n            onfillter={this.onfillter}\n            />\n        </div>\n      </div>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}